//@import "src/global/_colors";
//@import "src/global/_variable";
@import '../../../styles/atoms/control';

$switch-background: $grey-light !default;
$switch-border: 0.1rem solid $switch-background !default;
$switch-background-active: $primary !default;
$switch-radius: $radius !default;
$switch-paddle-background: $white !default;
$switch-paddle-background-active: $primary !default;
$switch-paddle-offset: 0.25rem !default;
$switch-paddle-transition: all 0.25s ease-out !default;
$switch-focus: none !default;

@mixin switch-size($size) {
  $switch-height: $size * 1.5;
  $switch-width: $switch-height * 2;
  $paddle-height: $switch-height - ($switch-paddle-offset * 2);
  $paddle-width: $switch-height - ($switch-paddle-offset * 2);
  $paddle-active-offset: $switch-width - $paddle-width - ($switch-paddle-offset * 1.5);

  + label {
    font-size: $size;
    padding-left: $switch-width + 0.5;

    &::before {
      width: $switch-width;
      height: $switch-height;
      border: $switch-border;
      background-color: transparent;
      border-radius: $radius-large * 4;
    }

    &::after {
      top: ($switch-height / 2) - ($paddle-height / 2);
      left: $switch-paddle-offset;
      width: $paddle-width;
      height: $paddle-height;
      transition: $switch-paddle-transition;
      background: $switch-background;
      border-radius: 50%;
    }
  }

  &:checked {
    + label {
      &::before {
        background: transparent;
        border-color: $switch-background-active;
      }

      &::after {
        left: $paddle-active-offset;
        background: $switch-paddle-background-active;
      }
    }
  }
}

:host {
  @include control;

  .switch[type='checkbox'] {
    vertical-align: baseline;
    font-family: $body-family;
    outline: 0;
    user-select: none;
    display: inline-block;
    position: absolute;
    opacity: 0;

    + label {
      position: relative;
      display: initial;
      line-height: initial;
      padding-top: 0.25rem;
      cursor: pointer;

      &::before {
        position: absolute;
        display: block;
        top: 0;
        left: 0;
        content: '';
        outline: none;
      }

      &::after {
        display: block;
        position: absolute;
        transform: translate3d(0, 0, 0);
        content: '';
        outline: none;
      }
    }

    &:focus {
      + label {
        &::before,
        &::after {
          outline: $switch-focus;
        }
      }
    }

    &[disabled] {
      cursor: not-allowed;

      + label {
        opacity: 0.5;

        &::before {
          opacity: 0.5;
        }

        &::after {
          opacity: 0.5;
        }

        &:hover {
          cursor: not-allowed;
        }
      }
    }

    @include switch-size($size-normal);

    @each $name, $pair in $colors {
      $color: nth($pair, 1);
      $color-invert: nth($pair, 2);
      &.is-#{$name} {
        &:checked {
          + label {
            &::before {
              background-color: transparent;
              border-color: $color !important;
            }

            &::after {
              background: $color;
            }
          }
        }
      }
      &.is-unchecked-#{$name} {
        + label {
          &::before {
            background-color: transparent;
            border-color: $color !important;
          }

          &::after {
            background: $color;
          }
        }
      }
    }
  }
}
