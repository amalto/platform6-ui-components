// Base CSS for the web component container
html {
  background-color: $body-background-color;
  font-size: $body-size;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  min-width: $body-min-width;
  overflow-x: $body-overflow-x;
  overflow-y: $body-overflow-y;
  text-rendering: $body-rendering;
  text-size-adjust: 100%;
  box-sizing: border-box;
}

body {
  color: $body-color;
  font-size: $body-font-size;
  font-weight: $body-weight;
  line-height: $body-line-height;
  font-family: $body-family;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

/*
article,
aside,
figure,
footer,
header,
hgroup,
section {
  display: block;
}

button,
input,
select,
textarea
{
  font-family: $body-family;
}

code,
pre {
  -moz-osx-font-smoothing: auto;
  -webkit-font-smoothing: auto;
  font-family: $code-family;
}

// Inline
a {
  color: $link;
  cursor: pointer;
  text-decoration: none;

  strong {
    color: currentColor;
  }

  &:hover {
    color: $link-hover;
  }
}

code {
  background-color: $code-background;
  color: $code;
  font-size: $code-size;
  font-weight: $code-weight;
  padding: $code-padding;
}

hr {
  background-color: $hr-background-color;
  border: none;
  display: block;
  height: $hr-height;
  margin: $hr-margin;
}

img {
  height: auto;
  max-width: 100%;
}

input[type="checkbox"],
input[type="radio"] {
  vertical-align: baseline;
}

small {
  font-size: $small-font-size;
}

span {
  font-style: inherit;
  font-weight: inherit;
}

strong {
  color: $strong-color;
  font-weight: $strong-weight;
}

// Block

fieldset {
  border: none;
}

@mixin overflow-touch() {
  -webkit-overflow-scrolling: touch;
}

pre {
  @include overflow-touch;
  background-color: $pre-background;
  color: $pre;
  font-size: $pre-font-size;
  overflow-x: auto;
  padding: $pre-padding;
  white-space: pre;
  word-wrap: normal;

  code {
    background-color: transparent;
    color: currentColor;
    font-size: $pre-code-font-size;
    padding: 0;
  }
}

table {
  td,
  th {
    vertical-align: top;

    &:not([align]) {
      text-align: inherit;
    }
  }

  th {
    color: $text-strong;
  }
}
*/
